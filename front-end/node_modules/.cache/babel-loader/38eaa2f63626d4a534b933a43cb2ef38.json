{"ast":null,"code":"var _jsxFileName = \"/Users/jeraldielquinones/Desktop/react-jobly/front-end/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport Routes from \"./routes-nav/Routes\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport JoblyApi from \"./api/api\";\nimport UserContext from \"./auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport { AppProvider } from \"./Book/context\";\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n  console.debug(\"App\", \"infoLoaded=\", infoLoaded, \"currentUser=\", currentUser, \"token=\", token);\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let {\n            username\n          } = jwt.decode(token);\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return {\n        success: true\n      };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return {\n        success: false,\n        errors\n      };\n    }\n  }\n  if (!infoLoaded) return /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }\n  });\n  return /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    logout: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Routes, {\n    login: login,\n    signup: signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","useLocalStorage","Navigation","Routes","LoadingSpinner","JoblyApi","UserContext","jwt","AppProvider","TOKEN_STORAGE_ID","App","infoLoaded","setInfoLoaded","currentUser","setCurrentUser","token","setToken","console","debug","loadUserInfo","getCurrentUser","username","decode","err","error","logout","signup","signupData","success","errors","login","loginData","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","className"],"sources":["/Users/jeraldielquinones/Desktop/react-jobly/front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport Routes from \"./routes-nav/Routes\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport JoblyApi from \"./api/api\";\nimport UserContext from \"./auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport { AppProvider } from \"./Book/context\";\n\n\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  console.debug(\n      \"App\",\n      \"infoLoaded=\", infoLoaded,\n      \"currentUser=\", currentUser,\n      \"token=\", token,\n  );\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n      <BrowserRouter>\n      <AppProvider>\n        <UserContext.Provider\n            value={{ currentUser, setCurrentUser}}>\n          <div className=\"App\">\n            <Navigation logout={logout} />\n            <Routes login={login} signup={signup} />\n          </div>\n        </UserContext.Provider>\n        </AppProvider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}